<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="robustmatcher_8h" kind="file" language="C++">
    <compoundname>robustmatcher.h</compoundname>
    <includes local="no">opencv.hpp</includes>
    <includedby refid="imageprocess_8cpp" local="yes">sources/imageprocess.cpp</includedby>
    <includedby refid="robustmatcher_8cpp" local="yes">sources/robustmatcher.cpp</includedby>
    <incdepgraph>
      <node id="657">
        <label>opencv.hpp</label>
      </node>
      <node id="656">
        <label>sources/robustmatcher.h</label>
        <link refid="robustmatcher_8h"/>
        <childnode refid="657" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="660">
        <label>sources/robustmatcher.cpp</label>
        <link refid="robustmatcher_8cpp"/>
      </node>
      <node id="659">
        <label>sources/imageprocess.cpp</label>
        <link refid="imageprocess_8cpp"/>
      </node>
      <node id="658">
        <label>sources/robustmatcher.h</label>
        <link refid="robustmatcher_8h"/>
        <childnode refid="659" relation="include">
        </childnode>
        <childnode refid="660" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_robust_matcher" prot="public">RobustMatcher</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;opencv.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="class_robust_matcher" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_robust_matcher" kindref="compound">RobustMatcher</ref></highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_robust_matcher_1a78641d08f99564cdf67a7a3f8d544f71" kindref="member">RobustMatcher</ref>();</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_robust_matcher_1ae8831ade1c296513fcad9764a05d3328" kindref="member">~RobustMatcher</ref>();</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_robust_matcher_1a00bcb865bcc240ec0df38cecf5243f5e" kindref="member">match</ref>(cv::Mat<sp/>src1,<sp/>cv::Mat<sp/>src2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maskOuterRatio,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maskInnerRatio,<sp/>cv::Mat<sp/>&amp;img_matches,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;angle);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>symmetryTest(</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;cv::DMatch&gt;&gt;<sp/>&amp;matches1,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;cv::DMatch&gt;&gt;<sp/>&amp;matches2,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;cv::DMatch&gt;<sp/>&amp;symMatches);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ratioTest(std::vector&lt;std::vector&lt;cv::DMatch&gt;&gt;<sp/>&amp;matches);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>getMask(cv::Size<sp/>size,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>outerRatio,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>innerRatio,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;ro,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;ri)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="sources/robustmatcher.h"/>
  </compounddef>
</doxygen>
