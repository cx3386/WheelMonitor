<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_sensor_device_8h" kind="file" language="C++">
    <compoundname>SensorDevice.h</compoundname>
    <includes refid="_level_recorder_8h" local="yes">LevelRecorder.h</includes>
    <includes local="no">QObject</includes>
    <includedby refid="_handle_sensor_device_8h" local="yes">sources/HandleSensorDevice.h</includedby>
    <includedby refid="_sensor_device_8cpp" local="yes">sources/SensorDevice.cpp</includedby>
    <incdepgraph>
      <node id="669">
        <label>LevelRecorder.h</label>
        <link refid="_level_recorder_8h"/>
      </node>
      <node id="670">
        <label>QObject</label>
      </node>
      <node id="668">
        <label>sources/SensorDevice.h</label>
        <link refid="_sensor_device_8h"/>
        <childnode refid="669" relation="include">
        </childnode>
        <childnode refid="670" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="681">
        <label>sources/SpeedIntegrator.h</label>
        <link refid="_speed_integrator_8h"/>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
      </node>
      <node id="682">
        <label>sources/SpeedIntegrator.cpp</label>
        <link refid="_speed_integrator_8cpp"/>
      </node>
      <node id="680">
        <label>sources/Plc.cpp</label>
        <link refid="_plc_8cpp"/>
      </node>
      <node id="672">
        <label>sources/HandleSensorDevice.h</label>
        <link refid="_handle_sensor_device_8h"/>
        <childnode refid="673" relation="include">
        </childnode>
        <childnode refid="683" relation="include">
        </childnode>
      </node>
      <node id="673">
        <label>sources/Plc.h</label>
        <link refid="_plc_8h"/>
        <childnode refid="674" relation="include">
        </childnode>
        <childnode refid="677" relation="include">
        </childnode>
        <childnode refid="679" relation="include">
        </childnode>
        <childnode refid="676" relation="include">
        </childnode>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="681" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
      </node>
      <node id="674">
        <label>sources/AlarmManager.h</label>
        <link refid="_alarm_manager_8h"/>
        <childnode refid="675" relation="include">
        </childnode>
        <childnode refid="676" relation="include">
        </childnode>
      </node>
      <node id="676">
        <label>sources/mainwindow.cpp</label>
        <link refid="mainwindow_8cpp"/>
      </node>
      <node id="684">
        <label>sources/SensorDevice.cpp</label>
        <link refid="_sensor_device_8cpp"/>
      </node>
      <node id="671">
        <label>sources/SensorDevice.h</label>
        <link refid="_sensor_device_8h"/>
        <childnode refid="672" relation="include">
        </childnode>
        <childnode refid="684" relation="include">
        </childnode>
      </node>
      <node id="679">
        <label>sources/imageprocess.cpp</label>
        <link refid="imageprocess_8cpp"/>
      </node>
      <node id="677">
        <label>sources/playbackwidget.h</label>
        <link refid="playbackwidget_8h"/>
        <childnode refid="674" relation="include">
        </childnode>
        <childnode refid="676" relation="include">
        </childnode>
        <childnode refid="678" relation="include">
        </childnode>
      </node>
      <node id="683">
        <label>sources/HandleSensorDevice.cpp</label>
        <link refid="_handle_sensor_device_8cpp"/>
      </node>
      <node id="675">
        <label>sources/AlarmManager.cpp</label>
        <link refid="_alarm_manager_8cpp"/>
      </node>
      <node id="678">
        <label>sources/playbackwidget.cpp</label>
        <link refid="playbackwidget_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_sensor" prot="public">Sensor</innerclass>
    <innerclass refid="class_ck_pt" prot="public">CkPt</innerclass>
    <innerclass refid="class_sensor_device" prot="public">SensorDevice</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_level_recorder_8h" kindref="compound">LevelRecorder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QObject&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*一个周期内的计数结构*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SenSor;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ck_pt" kindref="compound">CkPt</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sensor_device" kindref="compound">SensorDevice</ref>;</highlight></codeline>
<codeline lineno="10" refid="class_sensor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sensor" kindref="compound">Sensor</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sensor_1a297b58d8d5cfecb5a4c569a55129ce9e" kindref="member">Sensor</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/><ref refid="class_ck_pt" kindref="compound">CkPt</ref>*<sp/>parent);</highlight></codeline>
<codeline lineno="14" refid="class_sensor_1a234572fa1d52f50a2a3fe349022bd9bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a234572fa1d52f50a2a3fe349022bd9bd" kindref="member">id</ref>;<sp/></highlight></codeline>
<codeline lineno="15" refid="class_sensor_1af890760e92f0526cc6d1de67837bbee3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1af890760e92f0526cc6d1de67837bbee3" kindref="member">show_id</ref>;<sp/></highlight></codeline>
<codeline lineno="16" refid="class_sensor_1a3d1ebe0e05e5d75604330a70d3acf9e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a3d1ebe0e05e5d75604330a70d3acf9e5" kindref="member">m_id</ref>;<sp/></highlight><highlight class="comment">//id的最低位<sp/>0-l,1-r</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_sensor_1a3ed288f1dbf4b0fbe66038e969804843" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a3ed288f1dbf4b0fbe66038e969804843" kindref="member">id_gb2mem</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gid)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gid<sp/>&amp;<sp/>1;<sp/></highlight><highlight class="comment">/*取最低位*/</highlight><highlight class="normal"><sp/>}<sp/></highlight></codeline>
<codeline lineno="18" refid="class_sensor_1a2d3ac12a2a7c609be7fd7ce3bd5d4c9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a2d3ac12a2a7c609be7fd7ce3bd5d4c9b" kindref="member">indexOf</ref>(QString<sp/>_name)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a062401268f20ec88117c0a08c867670d" kindref="member">names</ref>.indexOf(_name);<sp/>}</highlight></codeline>
<codeline lineno="19" refid="class_sensor_1a062401268f20ec88117c0a08c867670d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringList<sp/><ref refid="class_sensor_1a062401268f20ec88117c0a08c867670d" kindref="member">names</ref>;<sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QList&lt;Sensor*&gt;<sp/><ref refid="class_sensor_1a03b33db349b28448615318739bc9101f" kindref="member">createAll</ref>(<ref refid="class_ck_pt" kindref="compound">CkPt</ref>*<sp/>parent);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a679f792ce4dba08c394aa4cd506fb2ae" kindref="member">newWheel</ref>();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a84bc35cfba92eb579bc311b3c8b2980d" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="23" refid="class_sensor_1a56a0ffda1ceedd2bc85548c77cebd7fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ck_pt" kindref="compound">CkPt</ref>*<sp/><ref refid="class_sensor_1a56a0ffda1ceedd2bc85548c77cebd7fc" kindref="member">parentCkPt</ref>;</highlight></codeline>
<codeline lineno="24" refid="class_sensor_1af962d8dc933caf0a9c7742bc44b29548" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/><ref refid="class_sensor_1af962d8dc933caf0a9c7742bc44b29548" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="25" refid="class_sensor_1a4667ebebacc6cfce173c41066d20f2eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a4667ebebacc6cfce173c41066d20f2eb" kindref="member">nTri</ref>;<sp/></highlight><highlight class="comment">//<sp/>传感器触发的次数,一个周期内，只应出现一次 <sp/><sp/><sp/><sp/>bool<sp/>expected<sp/>=<sp/>false;<sp/>//!&lt;<sp/>记录传感器是否坏掉
<sp/><sp/><sp/>bool<sp/>broken<sp/>=<sp/>true;<sp/>//!&lt;<sp/>记录传感器是否坏掉（周期结束时更新）
<sp/><sp/>LevelRecorder<sp/>sample;<sp/>//!&lt;<sp/>记录传感器的采样信息
<sp/><sp/><sp/>//int<sp/>lastbroken<sp/>=<sp/>2;<sp/>//!&lt;<sp/>上个周期内，是否坏掉0-no;1-may;2-yes,初始化为坏掉，即开机自检后显示为正常
private:
};

class<sp/>CkPt<sp/>:<sp/>public<sp/>QObject<sp/>{
<sp/><sp/>Q_OBJECT
public:
<sp/><sp/><sp/>CkPt(int<sp/>_id,<sp/>SensorDevice*<sp/>parent);
<sp/><sp/><sp/>int<sp/>id;<sp/>//即00外左进 01外右出 10内左出 11内右进
<sp/><sp/><sp/><sp/>int<sp/>m_id;//最低位:0-l;1-r
<sp/><sp/><sp/><sp/>SensorDevice*<sp/>parentDev;
<sp/><sp/><sp/>QString<sp/>name;
<sp/><sp/>bool<sp/>hasTri<sp/>=<sp/>false;
<sp/><sp/><sp/>static<sp/>int<sp/>gid2mid(int<sp/>gid)<sp/>{<sp/>return<sp/>gid<sp/>&amp;<sp/>1;<sp/>/*取最低位*/<sp/>}<sp/>//!&lt;<sp/>由global<sp/>id获得局部id
<sp/><sp/><sp/>static<sp/>int<sp/>indexOf(QString<sp/>_name)<sp/>{<sp/>return<sp/>names.indexOf(_name);<sp/>}
<sp/>static<sp/>const<sp/>QStringList<sp/>names;<sp/>//!&lt;<sp/>每个检测点的传感器
<sp/><sp/><sp/><sp/>static<sp/>QList&lt;CkPt*&gt;<sp/>creatAll(SensorDevice*<sp/>parent);<sp/>//!&lt;<sp/>一次性创建所有的检测点
<sp/>QList&lt;Sensor*&gt;<sp/>sensors;
<sp/><sp/><sp/><sp/>void<sp/>newWheel();
<sp/><sp/><sp/>void<sp/>init();
<sp/><sp/><sp/>//!<sp/>返回触发的时机，如果是进入，则下降沿触发
<sp/><sp/>int<sp/>triTiming()<sp/>{<sp/>return<sp/>isEnter()<sp/>?<sp/>LevelRecorder::NegativeEdge<sp/>:<sp/>LevelRecorder::PositiveEdge;<sp/>}
<sp/><sp/>//!<sp/>返回是否由此检测点进入
<sp/><sp/><sp/>bool<sp/>isEnter();
<sp/><sp/><sp/><sp/>//!<sp/>返回是否由此检测点离开
<sp/><sp/>bool<sp/>isLeave()<sp/>{<sp/>return<sp/>!isEnter();<sp/>}

private:
};

class<sp/>SensorDevice<sp/>:<sp/>public<sp/>QObject<sp/>{
<sp/><sp/>Q_OBJECT
public:
<sp/><sp/><sp/>SensorDevice(int<sp/>_id,<sp/>QObject*<sp/>parent);
<sp/><sp/><sp/><sp/>int<sp/>id;
<sp/><sp/><sp/><sp/>int<sp/>m_id;<sp/>//0-o;1-i
<sp/><sp/><sp/><sp/>QString<sp/>name;
<sp/><sp/>//int<sp/>alarm;<sp/>//0-正常,1-由下次循环判断,2-掉轮
<sp/><sp/>//int<sp/>lastalarm;<sp/>//!&lt;<sp/>只有一个传感器是好的，这个好的传感器又没亮，则无法判断是设备故障还是掉轮故障。交由下一个循环判断
<sp/>bool<sp/>needHandled<sp/>=<sp/>false;
<sp/><sp/>static<sp/>int<sp/>indexOf(QString<sp/>_name)<sp/>{<sp/>return<sp/>names.indexOf(_name);<sp/>}
<sp/>static<sp/>const<sp/>QStringList<sp/>names;
<sp/><sp/><sp/><sp/>static<sp/>QList&lt;SensorDevice*&gt;<sp/>createAll(QObject*<sp/>parent);
<sp/><sp/><sp/><sp/>QList&lt;CkPt*&gt;<sp/>ckpts;

<sp/><sp/><sp/>void<sp/>newWheel();
<sp/><sp/><sp/>void<sp/>init();
<sp/><sp/><sp/>~SensorDevice();
};
</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_sensor_1a1a614aaa89d6b4077cf0b7265649339b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a1a614aaa89d6b4077cf0b7265649339b" kindref="member">expected</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="27" refid="class_sensor_1a162de5c0d5d4b8235aa25a474002f594" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sensor_1a162de5c0d5d4b8235aa25a474002f594" kindref="member">broken</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="28" refid="class_sensor_1a12be80cf7102fa5a1f6488c29733cf88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_level_recorder" kindref="compound">LevelRecorder</ref><sp/><ref refid="class_sensor_1a12be80cf7102fa5a1f6488c29733cf88" kindref="member">sample</ref>;<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>lastbroken<sp/>=<sp/>2;<sp/>//!&lt;<sp/>上个周期内，是否坏掉0-no;1-may;2-yes,初始化为坏掉，即开机自检后显示为正常</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal">};</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_ck_pt" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ck_pt" kindref="compound">CkPt</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ck_pt_1a414daa67aca3918ad13febdf5df36072" kindref="member">CkPt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/><ref refid="class_sensor_device" kindref="compound">SensorDevice</ref>*<sp/>parent);</highlight></codeline>
<codeline lineno="37" refid="class_ck_pt_1a750ae2ab960e05b0685667c558980bb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ck_pt_1a750ae2ab960e05b0685667c558980bb8" kindref="member">id</ref>;<sp/></highlight><highlight class="comment">//即00外左进 01外右出 10内左出 11内右进 <sp/><sp/><sp/><sp/>int<sp/>m_id;//最低位:0-l;1-r
<sp/><sp/><sp/><sp/>SensorDevice*<sp/>parentDev;
<sp/><sp/><sp/>QString<sp/>name;
<sp/><sp/>bool<sp/>hasTri<sp/>=<sp/>false;
<sp/><sp/><sp/>static<sp/>int<sp/>gid2mid(int<sp/>gid)<sp/>{<sp/>return<sp/>gid<sp/>&amp;<sp/>1;<sp/>/*取最低位*/<sp/>}<sp/>//!&lt;<sp/>由global<sp/>id获得局部id
<sp/><sp/><sp/>static<sp/>int<sp/>indexOf(QString<sp/>_name)<sp/>{<sp/>return<sp/>names.indexOf(_name);<sp/>}
<sp/>static<sp/>const<sp/>QStringList<sp/>names;<sp/>//!&lt;<sp/>每个检测点的传感器
<sp/><sp/><sp/><sp/>static<sp/>QList&lt;CkPt*&gt;<sp/>creatAll(SensorDevice*<sp/>parent);<sp/>//!&lt;<sp/>一次性创建所有的检测点
<sp/>QList&lt;Sensor*&gt;<sp/>sensors;
<sp/><sp/><sp/><sp/>void<sp/>newWheel();
<sp/><sp/><sp/>void<sp/>init();
<sp/><sp/><sp/>//!<sp/>返回触发的时机，如果是进入，则下降沿触发
<sp/><sp/>int<sp/>triTiming()<sp/>{<sp/>return<sp/>isEnter()<sp/>?<sp/>LevelRecorder::NegativeEdge<sp/>:<sp/>LevelRecorder::PositiveEdge;<sp/>}
<sp/><sp/>//!<sp/>返回是否由此检测点进入
<sp/><sp/><sp/>bool<sp/>isEnter();
<sp/><sp/><sp/><sp/>//!<sp/>返回是否由此检测点离开
<sp/><sp/>bool<sp/>isLeave()<sp/>{<sp/>return<sp/>!isEnter();<sp/>}

private:
};

class<sp/>SensorDevice<sp/>:<sp/>public<sp/>QObject<sp/>{
<sp/><sp/>Q_OBJECT
public:
<sp/><sp/><sp/>SensorDevice(int<sp/>_id,<sp/>QObject*<sp/>parent);
<sp/><sp/><sp/><sp/>int<sp/>id;
<sp/><sp/><sp/><sp/>int<sp/>m_id;<sp/>//0-o;1-i
<sp/><sp/><sp/><sp/>QString<sp/>name;
<sp/><sp/>//int<sp/>alarm;<sp/>//0-正常,1-由下次循环判断,2-掉轮
<sp/><sp/>//int<sp/>lastalarm;<sp/>//!&lt;<sp/>只有一个传感器是好的，这个好的传感器又没亮，则无法判断是设备故障还是掉轮故障。交由下一个循环判断
<sp/>bool<sp/>needHandled<sp/>=<sp/>false;
<sp/><sp/>static<sp/>int<sp/>indexOf(QString<sp/>_name)<sp/>{<sp/>return<sp/>names.indexOf(_name);<sp/>}
<sp/>static<sp/>const<sp/>QStringList<sp/>names;
<sp/><sp/><sp/><sp/>static<sp/>QList&lt;SensorDevice*&gt;<sp/>createAll(QObject*<sp/>parent);
<sp/><sp/><sp/><sp/>QList&lt;CkPt*&gt;<sp/>ckpts;

<sp/><sp/><sp/>void<sp/>newWheel();
<sp/><sp/><sp/>void<sp/>init();
<sp/><sp/><sp/>~SensorDevice();
};
</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="class_ck_pt_1a5b0fb213cdb889034ebdf1a793e358c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ck_pt_1a5b0fb213cdb889034ebdf1a793e358c0" kindref="member">m_id</ref>;</highlight><highlight class="comment">//最低位:0-l;1-r</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="class_ck_pt_1a19532657da6670b50a16f7d0a601e9bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sensor_device" kindref="compound">SensorDevice</ref>*<sp/><ref refid="class_ck_pt_1a19532657da6670b50a16f7d0a601e9bb" kindref="member">parentDev</ref>;</highlight></codeline>
<codeline lineno="40" refid="class_ck_pt_1a903058e94ace524942fa08f2d9304bc4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/><ref refid="class_ck_pt_1a903058e94ace524942fa08f2d9304bc4" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="41" refid="class_ck_pt_1ad1906be43650dbb487d078b32c055d9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ck_pt_1ad1906be43650dbb487d078b32c055d9e" kindref="member">hasTri</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42" refid="class_ck_pt_1ad3259779575bb558490559404afb1903" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ck_pt_1ad3259779575bb558490559404afb1903" kindref="member">gid2mid</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gid)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gid<sp/>&amp;<sp/>1;<sp/></highlight><highlight class="comment">/*取最低位*/</highlight><highlight class="normal"><sp/>}<sp/></highlight></codeline>
<codeline lineno="43" refid="class_ck_pt_1aae408d0f5cf84a8f4ac7d6281829c1f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ck_pt_1aae408d0f5cf84a8f4ac7d6281829c1f6" kindref="member">indexOf</ref>(QString<sp/>_name)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ck_pt_1ae941eb0aa4d8f2ac4638fa846d8321a2" kindref="member">names</ref>.indexOf(_name);<sp/>}</highlight></codeline>
<codeline lineno="44" refid="class_ck_pt_1ae941eb0aa4d8f2ac4638fa846d8321a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringList<sp/><ref refid="class_ck_pt_1ae941eb0aa4d8f2ac4638fa846d8321a2" kindref="member">names</ref>;<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QList&lt;CkPt*&gt;<sp/><ref refid="class_ck_pt_1a3b438c401be7fd57da84a6c09220592f" kindref="member">creatAll</ref>(<ref refid="class_sensor_device" kindref="compound">SensorDevice</ref>*<sp/>parent);<sp/></highlight></codeline>
<codeline lineno="46" refid="class_ck_pt_1a1fff98cebcd0d02f8cad10310a2d3ed2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;Sensor*&gt;<sp/><ref refid="class_ck_pt_1a1fff98cebcd0d02f8cad10310a2d3ed2" kindref="member">sensors</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ck_pt_1a1bbbad154caab9065e9a6aebf696a11b" kindref="member">newWheel</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ck_pt_1aad65e83ec3ef258516bbee5ba4c6d120" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="50" refid="class_ck_pt_1a67a101d39c9ee8d8113f82905fb018f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_ck_pt_1a67a101d39c9ee8d8113f82905fb018f9" kindref="member">triTiming</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_ck_pt_1a2792e24314be95021e461a798ec2c884" kindref="member">isEnter</ref>()<sp/>?<sp/><ref refid="class_level_recorder_1acefed96903d1193e4653a9427edaa445a62833fdba3bcb209624600280163c348" kindref="member">LevelRecorder::NegativeEdge</ref><sp/>:<sp/><ref refid="class_level_recorder_1acefed96903d1193e4653a9427edaa445aff1718edd792fe76d3434a93cd980a74" kindref="member">LevelRecorder::PositiveEdge</ref>;<sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ck_pt_1a2792e24314be95021e461a798ec2c884" kindref="member">isEnter</ref>();</highlight></codeline>
<codeline lineno="54" refid="class_ck_pt_1afd63f78fd17b55451eb039ab9d5bb49f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ck_pt_1afd63f78fd17b55451eb039ab9d5bb49f" kindref="member">isLeave</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="class_ck_pt_1a2792e24314be95021e461a798ec2c884" kindref="member">isEnter</ref>();<sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_sensor_device" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sensor_device" kindref="compound">SensorDevice</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QObject<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>Q_OBJECT</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sensor_device_1a31ba196824ad72ac7e0fc960deb8bfa9" kindref="member">SensorDevice</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_id,<sp/>QObject*<sp/>parent);</highlight></codeline>
<codeline lineno="63" refid="class_sensor_device_1a229042a02989323d6388dd6037a35384" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_sensor_device_1a229042a02989323d6388dd6037a35384" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="64" refid="class_sensor_device_1a413a879ab20b538cff7ec754ca8f552d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_sensor_device_1a413a879ab20b538cff7ec754ca8f552d" kindref="member">m_id</ref>;<sp/></highlight><highlight class="comment">//0-o;1-i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="class_sensor_device_1add21fbc076ecbe5b4de479b426ad29bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QString<sp/><ref refid="class_sensor_device_1add21fbc076ecbe5b4de479b426ad29bd" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>alarm;<sp/>//0-正常,1-由下次循环判断,2-掉轮 <sp/><sp/>//int<sp/>lastalarm;<sp/>//!&lt;<sp/>只有一个传感器是好的，这个好的传感器又没亮，则无法判断是设备故障还是掉轮故障。交由下一个循环判断
<sp/>bool<sp/>needHandled<sp/>=<sp/>false;
<sp/><sp/>static<sp/>int<sp/>indexOf(QString<sp/>_name)<sp/>{<sp/>return<sp/>names.indexOf(_name);<sp/>}
<sp/>static<sp/>const<sp/>QStringList<sp/>names;
<sp/><sp/><sp/><sp/>static<sp/>QList&lt;SensorDevice*&gt;<sp/>createAll(QObject*<sp/>parent);
<sp/><sp/><sp/><sp/>QList&lt;CkPt*&gt;<sp/>ckpts;

<sp/><sp/><sp/>void<sp/>newWheel();
<sp/><sp/><sp/>void<sp/>init();
<sp/><sp/><sp/>~SensorDevice();
};
</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>lastalarm;<sp/>//!&lt;<sp/>只有一个传感器是好的，这个好的传感器又没亮，则无法判断是设备故障还是掉轮故障。交由下一个循环判断 <sp/>bool<sp/>needHandled<sp/>=<sp/>false;
<sp/><sp/>static<sp/>int<sp/>indexOf(QString<sp/>_name)<sp/>{<sp/>return<sp/>names.indexOf(_name);<sp/>}
<sp/>static<sp/>const<sp/>QStringList<sp/>names;
<sp/><sp/><sp/><sp/>static<sp/>QList&lt;SensorDevice*&gt;<sp/>createAll(QObject*<sp/>parent);
<sp/><sp/><sp/><sp/>QList&lt;CkPt*&gt;<sp/>ckpts;

<sp/><sp/><sp/>void<sp/>newWheel();
<sp/><sp/><sp/>void<sp/>init();
<sp/><sp/><sp/>~SensorDevice();
};
</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_sensor_device_1a86e56e6e908524cd1c27425f74b173a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sensor_device_1a86e56e6e908524cd1c27425f74b173a4" kindref="member">needHandled</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69" refid="class_sensor_device_1a0ae6c95bcdc8d5666a8dd9900d85196d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_sensor_device_1a0ae6c95bcdc8d5666a8dd9900d85196d" kindref="member">indexOf</ref>(QString<sp/>_name)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sensor_device_1abb7d81bf98c82e0b9f3c46a8055a9b7a" kindref="member">names</ref>.indexOf(_name);<sp/>}</highlight></codeline>
<codeline lineno="70" refid="class_sensor_device_1abb7d81bf98c82e0b9f3c46a8055a9b7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStringList<sp/><ref refid="class_sensor_device_1abb7d81bf98c82e0b9f3c46a8055a9b7a" kindref="member">names</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>QList&lt;SensorDevice*&gt;<sp/><ref refid="class_sensor_device_1ac71d0c34ea8d46a135299f14d56f71e8" kindref="member">createAll</ref>(QObject*<sp/>parent);</highlight></codeline>
<codeline lineno="72" refid="class_sensor_device_1a016f2950b9f99b0f5093fd0bd74850e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;CkPt*&gt;<sp/><ref refid="class_sensor_device_1a016f2950b9f99b0f5093fd0bd74850e7" kindref="member">ckpts</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sensor_device_1a3b67e95ea619719648481f76c2ae1b18" kindref="member">newWheel</ref>();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sensor_device_1a451e1e696ef7d6a02bc5b3e418b59acc" kindref="member">init</ref>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sensor_device_1a86594b84858de9265f533c26af206b4a" kindref="member">~SensorDevice</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="sources/SensorDevice.h"/>
  </compounddef>
</doxygen>
